# auto-generated by grc.converter

id: mapper_preamble_sync_cc
label: Preamble Synchronizer
category: '[mapper]'

parameters:
-   id: width
    label: Width
    dtype: int
-   id: preamble
    label: Preamble
    dtype: int_vector
-   id: modtype
    label: Modulaton
    dtype: enum
    options: [mapper.BPSK, mapper.P2BPSK, mapper.QPSK, mapper.PSK8]
    option_labels: [BPSK, Pi/2BPSK, QPSK, 8PSK]
-   id: symbol_map
    label: Symbol Values
    dtype: int_vector
    default: '[0,1]'
-   id: gtas
    label: Garble Thresh Acquire Sync
    dtype: real
    default: '0.97'
-   id: gtls
    label: Garble Thresh Loose Sync
    dtype: real
    default: '0.9'

inputs:
-   domain: stream
    dtype: complex

outputs:
-   domain: stream
    dtype: complex

templates:
    imports: import mapper
    make: mapper.preamble_sync_cc(${width}, ${preamble}, ${modtype}, ${symbol_map},
        ${gtas}, ${gtls})

documentation: "Garble Thresh Acquire Sync - Cross Correlation value to trigger Acquire\
    \ condition (0.97 ~trial and error)\n      Garble Thresh Loose Sync - Cross Correlation\
    \ value to trigger Loose condition (0.90 ~trial and error)\n      Width - # of\
    \ bits in each block including the length of the preamble\n      Preamble - Create\
    \ a variable in grc that uses the built in Preamble_Gen function (see below)\n\
    \        \n        pream_len = 84\n        preamble = (mapper.preamble_generator(pream_len,511,1033)).get_preamble()\n\
    \                                             (length,  seed, mask)"

file_format: 1
